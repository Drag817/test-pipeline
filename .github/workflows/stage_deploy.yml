name: Stage auto deploy

on:
  push:
    branches: [ "main", "dev" ] # change to "master" if you want that works here

jobs:
  build:
    runs-on: "0" # change to "dev"
    steps:
      - name: Checkout main and Submodules
        uses: actions/checkout@v3

      - name: Docker login
        run: sudo docker login --username oauth --password ${{ secrets.YANDEX_OAUTH }} cr.yandex # paste "main" commands

      - name: Build Docker
        run: | # paste "main" commands
          sudo docker build --cache-from cr.yandex/${{ secrets.DOCKER_REGISTRY }}/test:${{ github.ref_name }} -f Dockerfile -t cr.yandex/${{ secrets.DOCKER_REGISTRY }}/test:${{ github.ref_name }} .
          sudo docker push cr.yandex/${{ secrets.DOCKER_REGISTRY }}/test:${{ github.ref_name }}

  chose-instance:
    runs-on: "0" # change to "dev"
    outputs:
      runner: ${{ steps.group-info.outputs.runner }}
    steps:
      - name: install jq (yq)
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: yc setup
        uses: nightstory/setup-yc@v1
        with:
          enable-cache: true

      - name: Get group info if main branch
        if: ${{ github.ref_name == "main" }}
        id: group-info
        run: echo "runner=$(yc alb backend-group get production | yq '.["http"]["backends"][0]["backend_weight"]')" >> "$GITHUB_OUTPUT" # change "production" to <backend-group name>

      - name: Set dev runner if dev branch
        if: ${{ github.ref_name == "dev" }}
        id: group-info
        run: echo "runner=dev" >> "$GITHUB_OUTPUT"

  deploy:
    needs: [ build, chose-instance ]
    runs-on: ${{ needs.chose-instance.outputs.runner }}
    steps:
      - name: Docker login
        run: sudo docker login --username oauth --password ${{ secrets.YANDEX_OAUTH }} cr.yandex # paste "main" commands

      - name: Deploy
        run: sudo docker run -d cr.yandex/${{ secrets.DOCKER_REGISTRY }}/test:${{ github.ref_name }} # paste "main" commands